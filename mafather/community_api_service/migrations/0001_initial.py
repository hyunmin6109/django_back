# Generated by Django 5.2.2 on 2025-06-06 07:59

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='카테고리 이름')),
                ('description', models.TextField(blank=True, null=True, verbose_name='카테고리 설명')),
                ('post_type', models.CharField(choices=[('question', '질문'), ('story', '이야기'), ('tip', '팁')], max_length=20, verbose_name='적용 게시물 타입')),
                ('color', models.CharField(blank=True, max_length=7, null=True, verbose_name='카테고리 색상 (HEX)')),
                ('icon', models.CharField(blank=True, max_length=50, null=True, verbose_name='아이콘 클래스명')),
                ('order', models.IntegerField(default=0, verbose_name='표시 순서')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 시간')),
            ],
            options={
                'verbose_name': '카테고리',
                'verbose_name_plural': '카테고리들',
                'db_table': 'categories',
                'ordering': ['post_type', 'order'],
                'indexes': [models.Index(fields=['post_type'], name='categories_post_ty_ee682c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('post_type', models.CharField(choices=[('question', '질문'), ('story', '이야기'), ('tip', '팁')], max_length=20, verbose_name='게시물 타입')),
                ('title', models.CharField(max_length=200, verbose_name='제목')),
                ('content', models.TextField(verbose_name='내용')),
                ('status', models.CharField(choices=[('draft', '초안'), ('published', '게시됨'), ('hidden', '숨김')], default='published', max_length=20, verbose_name='상태')),
                ('view_count', models.IntegerField(default=0, verbose_name='조회수')),
                ('like_count', models.IntegerField(default=0, verbose_name='좋아요 수')),
                ('comment_count', models.IntegerField(default=0, verbose_name='댓글 수')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='익명 여부')),
                ('is_solved', models.BooleanField(blank=True, null=True, verbose_name='해결 여부 (질문 타입에만 적용)')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='상단 고정 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 시간')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='삭제 시간')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='community_api_service.category', verbose_name='카테고리')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
            ],
            options={
                'verbose_name': '게시물',
                'verbose_name_plural': '게시물들',
                'db_table': 'posts',
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(verbose_name='내용')),
                ('like_count', models.IntegerField(default=0, verbose_name='좋아요 수')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='익명 여부')),
                ('depth', models.IntegerField(default=0, verbose_name='댓글 깊이')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 시간')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='삭제 시간')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='community_api_service.comment', verbose_name='부모 댓글')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='community_api_service.post', verbose_name='게시물')),
            ],
            options={
                'verbose_name': '댓글',
                'verbose_name_plural': '댓글들',
                'db_table': 'comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image_url', models.URLField(verbose_name='이미지 URL')),
                ('alt_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='대체 텍스트')),
                ('order', models.IntegerField(default=0, verbose_name='이미지 순서')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='삭제 시간')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='community_api_service.post', verbose_name='게시물')),
            ],
            options={
                'verbose_name': '게시물 이미지',
                'verbose_name_plural': '게시물 이미지들',
                'db_table': 'post_images',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('target_id', models.UUIDField(verbose_name='대상 ID')),
                ('target_type', models.CharField(choices=[('post', '게시물'), ('comment', '댓글')], max_length=20, verbose_name='대상 유형')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '좋아요',
                'verbose_name_plural': '좋아요들',
                'db_table': 'likes',
                'indexes': [models.Index(fields=['target_id', 'target_type'], name='likes_target__7be41a_idx'), models.Index(fields=['user', 'target_id', 'target_type'], name='likes_user_id_a49ed0_idx')],
                'unique_together': {('user', 'target_id', 'target_type')},
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['category'], name='posts_categor_e255e1_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['user'], name='posts_user_id_05c508_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['post_type'], name='posts_post_ty_8f219b_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['status'], name='posts_status_bd5975_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['created_at'], name='posts_created_060265_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['is_pinned'], name='posts_is_pinn_8461a5_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post'], name='comments_post_id_7ee550_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user'], name='comments_user_id_8613ff_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['parent'], name='comments_parent__9f8798_idx'),
        ),
    ]
