# Generated by Django 5.2.2 on 2025-06-06 07:59

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일')),
                ('password', models.CharField(max_length=255, verbose_name='비밀번호')),
                ('name', models.CharField(max_length=100, verbose_name='사용자 이름')),
                ('profile_image', models.URLField(blank=True, null=True, verbose_name='프로필 이미지 URL')),
                ('auth_provider', models.CharField(choices=[('local', 'Local'), ('google', 'Google'), ('kakao', 'Kakao'), ('naver', 'Naver')], default='local', max_length=20, verbose_name='인증 제공자')),
                ('auth_provider_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='인증 제공자 ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='마지막 로그인')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('is_staff', models.BooleanField(default=False, verbose_name='스태프 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 시간')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='삭제 시간')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자들',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query', models.CharField(max_length=255, verbose_name='검색어')),
                ('search_type', models.CharField(choices=[('all', '전체'), ('posts', '게시물'), ('milestones', '발달 이정표'), ('records', '발달 기록')], default='all', max_length=50, verbose_name='검색 유형')),
                ('results_count', models.IntegerField(default=0, verbose_name='결과 수')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP 주소')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '검색 로그',
                'verbose_name_plural': '검색 로그들',
                'db_table': 'search_logs',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255, unique=True, verbose_name='세션 토큰')),
                ('device_info', models.JSONField(blank=True, null=True, verbose_name='기기 정보')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP 주소')),
                ('expires_at', models.DateTimeField(verbose_name='만료 시간')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 시간')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '세션',
                'verbose_name_plural': '세션들',
                'db_table': 'sessions',
            },
        ),
        migrations.CreateModel(
            name='UserChild',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='자녀 별명')),
                ('birth_date', models.DateField(verbose_name='생년월일')),
                ('gender', models.CharField(blank=True, choices=[('male', '남성'), ('female', '여성'), ('other', '기타')], max_length=10, null=True, verbose_name='성별')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 시간')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='삭제 시간')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '자녀 정보',
                'verbose_name_plural': '자녀 정보들',
                'db_table': 'user_children',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['auth_provider', 'auth_provider_id'], name='users_auth_pr_b4d5b4_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_active'], name='users_is_acti_847b48_idx'),
        ),
        migrations.AddIndex(
            model_name='searchlog',
            index=models.Index(fields=['user'], name='search_logs_user_id_57f35c_idx'),
        ),
        migrations.AddIndex(
            model_name='searchlog',
            index=models.Index(fields=['created_at'], name='search_logs_created_1842c5_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['user'], name='sessions_user_id_7acd24_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['token'], name='sessions_token_6270d5_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['expires_at'], name='sessions_expires_bbb852_idx'),
        ),
        migrations.AddIndex(
            model_name='userchild',
            index=models.Index(fields=['user'], name='user_childr_user_id_50809b_idx'),
        ),
    ]
